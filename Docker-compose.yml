version: "3.8"
networks: 
  laravel:
    name: Laravel
services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: tuts_nginx
    tty: true
    depends_on:
      - php
      - mysql
    ports: 
      - 80:80
      - 443:443
    volumes:
      - ./src:/var/www/html
    networks: 
      - laravel

  php:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: tuts_php
    restart: unless-stopped
    tty: true
    volumes: 
      - ./src:/var/www/html
    networks: 
      - laravel

  mysql:
    image: mysql:latest
    container_name: tuts_mysql
    ports: 
      - 3307:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: tuts_Laravel
      MYSQL_USER: Laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    networks: 
      - laravel
  
  composer:
    image: composer:latest
    container_name: tuts_composer
    volumes: 
      - ./src:/var/www/html
    working_dir: /var/www/html
    command: ["install","--ignore-platform-reqs"]
    depends_on:
      - php
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tuts_artisan
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php","artisan"]
    networks:
      - laravel

  npm:
    image: node:20.11.1
    container_name: tuts_npm
    volumes: 
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - laravel

  mailpit:
    image: axllent/mailpit:latest
    container_name: tuts_mailpit
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel
  
  redis:
    image: redis:alpine
    container_name: tuts_redis
    restart: unless-stopped
    ports:
      - 6379:6379 
    volumes:
      - './redisdata:/data'
    networks:
      - laravel
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      retries: 3
      timeout: 5s

